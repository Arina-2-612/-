from telegram import ReplyKeyboardMarkup, ReplyKeyboardRemove, Update
from telegram.ext import (
    Application,
    CommandHandler,
    ConversationHandler,
    MessageHandler,
    filters,
    ContextTypes,
)

GENRE, MOOD, DURATION, RESULT = range(4)

movies_db = [
    {"title": "–ö—Ä–µ—Å—Ç–Ω—ã–π –æ—Ç–µ—Ü", "genre": "–∫—Ä–∏–º–∏–Ω–∞–ª", "mood": "–Ω–∞–ø—Ä—è–∂—ë–Ω–Ω—ã–π", "duration": "–¥–ª–∏–Ω–Ω—ã–π"},
    {"title": "–ü–æ–±–µ–≥ –∏–∑ –®–æ—É—à–µ–Ω–∫–∞", "genre": "–¥—Ä–∞–º–∞", "mood": "–¥–æ–±—Ä—ã–π", "duration": "–¥–ª–∏–Ω–Ω—ã–π"},
    {"title": "–¢–µ–º–Ω—ã–π —Ä—ã—Ü–∞—Ä—å", "genre": "–±–æ–µ–≤–∏–∫", "mood": "—ç–∫—à–Ω", "duration": "–¥–ª–∏–Ω–Ω—ã–π"},
    {"title": "–§–æ—Ä—Ä–µ—Å—Ç –ì–∞–º–ø", "genre": "–¥—Ä–∞–º–∞", "mood": "–¥–æ–±—Ä—ã–π", "duration": "–¥–ª–∏–Ω–Ω—ã–π"},
    {"title": "–ù–∞—á–∞–ª–æ", "genre": "—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", "mood": "–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π", "duration": "–¥–ª–∏–Ω–Ω—ã–π"},
    {"title": "–ú–∞—Ç—Ä–∏—Ü–∞", "genre": "—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", "mood": "—ç–∫—à–Ω", "duration": "—Å—Ä–µ–¥–Ω–∏–π"},
    {"title": "–î–∂–∞–Ω–≥–æ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω—ã–π", "genre": "–±–æ–µ–≤–∏–∫", "mood": "—ç–∫—à–Ω", "duration": "–¥–ª–∏–Ω–Ω—ã–π"},
    {"title": "–ë–æ–π—Ü–æ–≤—Å–∫–∏–π –∫–ª—É–±", "genre": "–¥—Ä–∞–º–∞", "mood": "–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π", "duration": "–¥–ª–∏–Ω–Ω—ã–π"},
    {"title": "–ó–µ–ª–µ–Ω–∞—è –∫–Ω–∏–≥–∞", "genre": "–¥—Ä–∞–º–∞", "mood": "–¥–æ–±—Ä—ã–π", "duration": "—Å—Ä–µ–¥–Ω–∏–π"},
    {"title": "–î–æ—Å—Ç–∞—Ç—å –Ω–æ–∂–∏", "genre": "—Ç—Ä–∏–ª–ª–µ—Ä", "mood": "–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π", "duration": "—Å—Ä–µ–¥–Ω–∏–π"},
    {"title": "–û–¥–Ω–∞–∂–¥—ã –≤ –ì–æ–ª–ª–∏–≤—É–¥–µ", "genre": "–¥—Ä–∞–º–∞", "mood": "—Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π", "duration": "–¥–ª–∏–Ω–Ω—ã–π"},
    {"title": "–î–∂–æ–∫–µ—Ä", "genre": "–¥—Ä–∞–º–∞", "mood": "–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π", "duration": "—Å—Ä–µ–¥–Ω–∏–π"},
    {"title": "–ü–∞—Ä–∞–∑–∏—Ç—ã", "genre": "—Ç—Ä–∏–ª–ª–µ—Ä", "mood": "–Ω–∞–ø—Ä—è–∂—ë–Ω–Ω—ã–π", "duration": "—Å—Ä–µ–¥–Ω–∏–π"},
    {"title": "–ì—Ä–∞–≤–∏—Ç–∞—Ü–∏—è", "genre": "—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", "mood": "–Ω–∞–ø—Ä—è–∂—ë–Ω–Ω—ã–π", "duration": "–∫–æ—Ä–æ—Ç–∫–∏–π"},
    {"title": "–ú–∞–ª—å—á–∏—à–Ω–∏–∫ –≤ –í–µ–≥–∞—Å–µ", "genre": "–∫–æ–º–µ–¥–∏—è", "mood": "–≤–µ—Å—ë–ª—ã–π", "duration": "—Å—Ä–µ–¥–Ω–∏–π"},
    {"title": "–ò–Ω—Ç–µ—Ä—Å—Ç–µ–ª–ª–∞—Ä", "genre": "—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", "mood": "–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π", "duration": "–¥–ª–∏–Ω–Ω—ã–π"},
    {"title": "–í–æ–ª–∫ —Å –£–æ–ª–ª-—Å—Ç—Ä–∏—Ç", "genre": "–∫–æ–º–µ–¥–∏—è", "mood": "–≤–µ—Å—ë–ª—ã–π", "duration": "–¥–ª–∏–Ω–Ω—ã–π"},
    {"title": "–û—Å—Ç—Ä–æ–≤ –ø—Ä–æ–∫–ª—è—Ç—ã—Ö", "genre": "—Ç—Ä–∏–ª–ª–µ—Ä", "mood": "–Ω–∞–ø—Ä—è–∂—ë–Ω–Ω—ã–π", "duration": "–¥–ª–∏–Ω–Ω—ã–π"},
    {"title": "–ì–ª–∞–¥–∏–∞—Ç–æ—Ä", "genre": "–±–æ–µ–≤–∏–∫", "mood": "—ç–∫—à–Ω", "duration": "–¥–ª–∏–Ω–Ω—ã–π"},
    {"title": "–¢–∏—Ç–∞–Ω–∏–∫", "genre": "–¥—Ä–∞–º–∞", "mood": "—Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π", "duration": "–¥–ª–∏–Ω–Ω—ã–π"},
    {"title": "–ö—Ä–∏–º–∏–Ω–∞–ª—å–Ω–æ–µ —á—Ç–∏–≤–æ", "genre": "–∫—Ä–∏–º–∏–Ω–∞–ª", "mood": "–Ω–∞–ø—Ä—è–∂—ë–Ω–Ω—ã–π", "duration": "–¥–ª–∏–Ω–Ω—ã–π"},
    {"title": "–û–¥–µ—Ä–∂–∏–º–æ—Å—Ç—å", "genre": "–¥—Ä–∞–º–∞", "mood": "–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π", "duration": "—Å—Ä–µ–¥–Ω–∏–π"},
    {"title": "–î–µ–¥–ø—É–ª", "genre": "–∫–æ–º–µ–¥–∏—è", "mood": "–≤–µ—Å—ë–ª—ã–π", "duration": "—Å—Ä–µ–¥–Ω–∏–π"},
    {"title": "–ë–µ–∑—É–º–Ω—ã–π –ú–∞–∫—Å", "genre": "–±–æ–µ–≤–∏–∫", "mood": "—ç–∫—à–Ω", "duration": "—Å—Ä–µ–¥–Ω–∏–π"},
    {"title": "–û–Ω–æ", "genre": "—Ç—Ä–∏–ª–ª–µ—Ä", "mood": "–Ω–∞–ø—Ä—è–∂—ë–Ω–Ω—ã–π", "duration": "–¥–ª–∏–Ω–Ω—ã–π"}
]
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∏–Ω–∞–µ—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ –∂–∞–Ω—Ä–µ."""
    user = update.effective_user

    reply_keyboard = [["–±–æ–µ–≤–∏–∫", "–¥—Ä–∞–º–∞", "–∫–æ–º–µ–¥–∏—è"],
                      ["—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", "–∫—Ä–∏–º–∏–Ω–∞–ª", "—Ç—Ä–∏–ª–ª–µ—Ä"]]

    await update.message.reply_text(
        f'–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –Ø –ø–æ–¥–±–µ—Ä—É —Ñ–∏–ª—å–º –ø–æ —Ç–≤–æ–∏–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º ‚ù§Ô∏è\n\n'
        "–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∂–∞–Ω—Ä–æ–≤ –≤ –º–µ–Ω—é:",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="–í—ã–±–µ—Ä–∏ –∂–∞–Ω—Ä"
        ),
    )

    return GENRE


async def genre(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∂–∞–Ω—Ä–∞."""
    reply_keyboard = [["–±–æ–µ–≤–∏–∫", "–¥—Ä–∞–º–∞", "–∫–æ–º–µ–¥–∏—è"],
                      ["—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", "–∫—Ä–∏–º–∏–Ω–∞–ª", "—Ç—Ä–∏–ª–ª–µ—Ä"]]
    if update.message.text not in ["–±–æ–µ–≤–∏–∫", "–¥—Ä–∞–º–∞", "–∫–æ–º–µ–¥–∏—è", "—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", "–∫—Ä–∏–º–∏–Ω–∞–ª", "—Ç—Ä–∏–ª–ª–µ—Ä"]:
        await update.message.reply_text(
            "–¢–∞–∫–æ–≥–æ –∂–∞–Ω—Ä–∞ –Ω–µ—Ç üôÉ\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤ –º–µ–Ω—é!",
            reply_markup=ReplyKeyboardMarkup(
                reply_keyboard, one_time_keyboard=True, input_field_placeholder="–í—ã–±–µ—Ä–∏ –∂–∞–Ω—Ä"
            ),
        )
        return GENRE

    context.user_data["genre"] = update.message.text
    reply_keyboard = [["—Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π", "—ç–∫—à–Ω", "–¥–æ–±—Ä—ã–π"],
                      ["–Ω–∞–ø—Ä—è–∂—ë–Ω–Ω—ã–π", "–≤–µ—Å—ë–ª—ã–π", "–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π"]]

    await update.message.reply_text(
        "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ üòú",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="–í—ã–±–µ—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"
        ),
    )
    return MOOD


async def mood(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è."""
    reply_keyboard = [["—Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π", "—ç–∫—à–Ω", "–¥–æ–±—Ä—ã–π"],
                      ["–Ω–∞–ø—Ä—è–∂—ë–Ω–Ω—ã–π", "–≤–µ—Å—ë–ª—ã–π", "–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π"]]
    if update.message.text not in ["—Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π", "—ç–∫—à–Ω", "–¥–æ–±—Ä—ã–π", "–Ω–∞–ø—Ä—è–∂—ë–Ω–Ω—ã–π", "–≤–µ—Å—ë–ª—ã–π", "–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π"]:
        await update.message.reply_text(
            "–¢–∞–∫–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è —è –Ω–µ –∑–Ω–∞—é üôÉ\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤ –º–µ–Ω—é!",
            reply_markup=ReplyKeyboardMarkup(
                reply_keyboard, one_time_keyboard=True
            )
        )
        return MOOD

    context.user_data["mood"] = update.message.text
    reply_keyboard = [["–∫–æ—Ä–æ—Ç–∫–∏–π", "—Å—Ä–µ–¥–Ω–∏–π", "–¥–ª–∏–Ω–Ω—ã–π", "–ª—é–±–æ–π"]]

    await update.message.reply_text(
        "–•–æ—Ä–æ—à–æ! –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å: —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ —É —Ç–µ–±—è –µ—Å—Ç—å? üöÄ",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="–í—ã–±–µ—Ä–∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
        ),
    )
    return DURATION


async def duration(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç."""
    reply_keyboard = [["–∫–æ—Ä–æ—Ç–∫–∏–π", "—Å—Ä–µ–¥–Ω–∏–π", "–¥–ª–∏–Ω–Ω—ã–π", "–ª—é–±–æ–π"]]
    if update.message.text not in ["–∫–æ—Ä–æ—Ç–∫–∏–π", "—Å—Ä–µ–¥–Ω–∏–π", "–¥–ª–∏–Ω–Ω—ã–π", "–ª—é–±–æ–π"]:
        await update.message.reply_text(
            "–¢–∞–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–µ—Ç üôÉ\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤ –º–µ–Ω—é!",
            reply_markup=ReplyKeyboardMarkup(
                reply_keyboard, one_time_keyboard=True
            )
        )
        return DURATION

    # –∏—Ç–æ–≥ –ø—Ä–µ–ø–¥–æ—á—Ç–µ–Ω–∏—è
    genre_pref = context.user_data.get("genre", "")
    mood_pref = context.user_data.get("mood", "")
    duration_pref = context.user_data.get("duration", "–ª—é–±–æ–π")

    # —Ü–∏–∫–ª –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ —Ñ–∏–ª—å–º–∞
    suitable_movies = []
    for movie in movies_db:
        genre_match = not genre_pref or genre_pref in movie["genre"]
        mood_match = not mood_pref or mood_pref in movie["mood"]
        duration_match = (duration_pref == "–ª—é–±–æ–π") or (duration_pref in movie["duration"])

        if genre_match and mood_match and duration_match:
            suitable_movies.append(movie["title"])

    # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º
    if not suitable_movies:
        import random
        suitable_movies = [random.choice(movies_db)["title"]]

    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ
    movies_to_show = suitable_movies[:3]
    movies_text = "\n- ".join(movies_to_show)

    await update.message.reply_text(
        f"–í–æ—Ç —á—Ç–æ —è –Ω–∞—à–µ–ª –¥–ª—è —Ç–µ–±—è:\n- {movies_text}\n\n"
        f"–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞! üé¨\n\n"
        f"–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑, –Ω–∞–∂–º–∏ /start",
        reply_markup=ReplyKeyboardRemove()
    )

    return ConversationHandler.END


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–º–µ–Ω—è–µ—Ç –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä."""
    await update.message.reply_text(
        "–ü–æ–∏—Å–∫ –æ—Ç–º–µ–Ω–µ–Ω. –ï—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞, –Ω–∞–∂–º–∏ /start",
        reply_markup=ReplyKeyboardRemove()
    )

    return ConversationHandler.END

async def handle_unexpected_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ª—é–±—ã–µ –Ω–µ–ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    await update.message.reply_text(
        "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç—ã –≥–æ–≤–æ—Ä–∏—à—å(\n"
        "–ù–∞–∂–º–∏ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥."
    )


def main() -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    application = Application.builder().token("7967156469:AAGztoyX42NhQ8suQcZBFSB0g_c26fIN_e0").build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            GENRE: [MessageHandler(filters.TEXT & ~filters.COMMAND, genre)],
            MOOD: [MessageHandler(filters.TEXT & ~filters.COMMAND, mood)],
            DURATION: [MessageHandler(filters.TEXT & ~filters.COMMAND, duration)],
        },
        fallbacks=[
            CommandHandler("cancel", cancel),
            MessageHandler(filters.ALL, handle_unexpected_message)  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        ],
    )

    application.add_handler(conv_handler)

    application.add_handler(MessageHandler(filters.ALL & ~filters.COMMAND, handle_unexpected_message))

    application.run_polling()


if __name__ == "__main__":
    main()